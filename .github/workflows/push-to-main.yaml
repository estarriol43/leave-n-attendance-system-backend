name: Build and Deploy to Cloud Run

on:
  push:
    tags:
      - 'release-*'

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4

    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Configures the Google Cloud SDK'
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT }}

    - name: 'Authenticate to Artifact Registry Docker'
      run: |-
        gcloud auth configure-docker '${{ vars.REGISTRY_ZONE }}-docker.pkg.dev'

    - name: 'Build Docker Image'
      run: |-
        docker build --tag '${{ vars.REGISTRY_ZONE }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ vars.REGISTRY_NAME }}/${{ vars.IMAGE_NAME }}:${{ github.sha }}' .

    - name: 'Push Docker Image to Artifact Registry'
      run: |-
        docker push '${{ vars.REGISTRY_ZONE }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ vars.REGISTRY_NAME }}/${{ vars.IMAGE_NAME }}:${{ github.sha }}'

    - name: 'Deploy on Cloud Run'
      uses: 'google-github-actions/deploy-cloudrun@v2'
      with:
        service: '${{ vars.DEPLOYMENT_NAME }}'
        image: '${{ vars.REGISTRY_ZONE }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ vars.REGISTRY_NAME }}/${{ vars.IMAGE_NAME }}:${{ github.sha }}'
        region: '${{ vars.CLOUDRUN_ZONE }}'
        flags: '--network=${{ vars.VPC }} --subnet=${{ vars.VPC_SUBNET }} --port 8000'
        env_vars: |-
          DATABASE_URL=${{ secrets.DATABASE_URL }}
